{
	"id": 0,
	"name": "nanogl-pf",
	"kind": 1,
	"kindString": "Project",
	"flags": {},
	"originalName": "",
	"children": [
		{
			"id": 6,
			"name": "PixelFormats",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "This class provides various pixel-format related capabilities."
					}
				]
			},
			"originalName": "default",
			"children": [
				{
					"id": 10,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 89,
							"character": 2,
							"url": "https://github.com/plepers/nanogl-pf/blob/12d6a6f/src/index.ts#L89"
						}
					],
					"signatures": [
						{
							"id": 11,
							"name": "new PixelFormats",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 12,
									"name": "gl",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The webgl context this PixelFormats belongs to"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "WebGLRenderingContext",
												"qualifiedName": "WebGLRenderingContext",
												"package": "typescript"
											},
											{
												"type": "reference",
												"name": "WebGL2RenderingContext",
												"qualifiedName": "WebGL2RenderingContext",
												"package": "typescript"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 6,
								"name": "default"
							}
						}
					]
				},
				{
					"id": 29,
					"name": "A2B10G10R10",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Pixel format preset for A2B10G10R10"
							}
						]
					},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 83,
							"character": 11,
							"url": "https://github.com/plepers/nanogl-pf/blob/12d6a6f/src/index.ts#L83"
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"name": "FormatDesc"
					}
				},
				{
					"id": 18,
					"name": "EXT_color_buffer_float",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The EXT_color_buffer_float webgl extension :\nadds the ability to render a variety of floating point formats"
							}
						]
					},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 47,
							"character": 2,
							"url": "https://github.com/plepers/nanogl-pf/blob/12d6a6f/src/index.ts#L47"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 19,
					"name": "EXT_color_buffer_half_float",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The EXT_color_buffer_half_float webgl extension :\nadds the ability to render to 16-bit floating-point color buffers"
							}
						]
					},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 52,
							"character": 2,
							"url": "https://github.com/plepers/nanogl-pf/blob/12d6a6f/src/index.ts#L52"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 14,
					"name": "EXT_texture_float",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The OES_texture_float webgl extension :\nexposes floating-point pixel types for textures"
							}
						]
					},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 27,
							"character": 2,
							"url": "https://github.com/plepers/nanogl-pf/blob/12d6a6f/src/index.ts#L27"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"name": "OES_texture_float",
								"qualifiedName": "OES_texture_float",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 17,
					"name": "EXT_texture_float_linear",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The OES_texture_float_linear webgl extension :\nallows linear filtering with floating-point pixel types for textures"
							}
						]
					},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 42,
							"character": 2,
							"url": "https://github.com/plepers/nanogl-pf/blob/12d6a6f/src/index.ts#L42"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"name": "OES_texture_float_linear",
								"qualifiedName": "OES_texture_float_linear",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 15,
					"name": "EXT_texture_half_float",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The OES_texture_half_float webgl extension :\nadds texture formats with 16- and 32-bit floating-point components"
							}
						]
					},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 32,
							"character": 2,
							"url": "https://github.com/plepers/nanogl-pf/blob/12d6a6f/src/index.ts#L32"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"name": "OES_texture_half_float",
								"qualifiedName": "OES_texture_half_float",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 16,
					"name": "EXT_texture_half_float_linear",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The OES_texture_half_float_linear webgl extension :\nallows linear filtering with half floating-point pixel types for textures"
							}
						]
					},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 37,
							"character": 2,
							"url": "https://github.com/plepers/nanogl-pf/blob/12d6a6f/src/index.ts#L37"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"name": "OES_texture_half_float_linear",
								"qualifiedName": "OES_texture_half_float_linear",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 27,
					"name": "RGB16F",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Pixel format preset for RGB16F"
							}
						]
					},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 79,
							"character": 11,
							"url": "https://github.com/plepers/nanogl-pf/blob/12d6a6f/src/index.ts#L79"
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"name": "FormatDesc"
					}
				},
				{
					"id": 25,
					"name": "RGB32F",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Pixel format preset for RGB32F"
							}
						]
					},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 75,
							"character": 11,
							"url": "https://github.com/plepers/nanogl-pf/blob/12d6a6f/src/index.ts#L75"
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"name": "FormatDesc"
					}
				},
				{
					"id": 23,
					"name": "RGB8",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Pixel format preset for RGB8"
							}
						]
					},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 71,
							"character": 11,
							"url": "https://github.com/plepers/nanogl-pf/blob/12d6a6f/src/index.ts#L71"
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"name": "FormatDesc"
					}
				},
				{
					"id": 28,
					"name": "RGBA16F",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Pixel format preset for RGBA16F"
							}
						]
					},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 81,
							"character": 11,
							"url": "https://github.com/plepers/nanogl-pf/blob/12d6a6f/src/index.ts#L81"
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"name": "FormatDesc"
					}
				},
				{
					"id": 26,
					"name": "RGBA32F",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Pixel format preset for RGBA32F"
							}
						]
					},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 77,
							"character": 11,
							"url": "https://github.com/plepers/nanogl-pf/blob/12d6a6f/src/index.ts#L77"
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"name": "FormatDesc"
					}
				},
				{
					"id": 24,
					"name": "RGBA8",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Pixel format preset for RGBA8"
							}
						]
					},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 73,
							"character": 11,
							"url": "https://github.com/plepers/nanogl-pf/blob/12d6a6f/src/index.ts#L73"
						}
					],
					"type": {
						"type": "reference",
						"id": 1,
						"name": "FormatDesc"
					}
				},
				{
					"id": 20,
					"name": "WEBGL_depth_texture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The depth texture webgl extension :\ndefines 2D depth and depth-stencil textures"
							}
						]
					},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 57,
							"character": 2,
							"url": "https://github.com/plepers/nanogl-pf/blob/12d6a6f/src/index.ts#L57"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 21,
					"name": "_availables",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "List of pixel formats that have already been tested for texture allocation\nto be possible or not, and the corresponding result"
							}
						]
					},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 63,
							"character": 19,
							"url": "https://github.com/plepers/nanogl-pf/blob/12d6a6f/src/index.ts#L63"
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						],
						"name": "Record",
						"qualifiedName": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 22,
					"name": "_renderables",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "List of pixel formats that have already been tested\nto be color renderable or not, and the corresponding result"
							}
						]
					},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 68,
							"character": 19,
							"url": "https://github.com/plepers/nanogl-pf/blob/12d6a6f/src/index.ts#L68"
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						],
						"name": "Record",
						"qualifiedName": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 13,
					"name": "gl",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The webgl context this ArrayBuffer belongs to"
							}
						]
					},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 21,
							"character": 11,
							"url": "https://github.com/plepers/nanogl-pf/blob/12d6a6f/src/index.ts#L21"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "WebGLRenderingContext",
								"qualifiedName": "WebGLRenderingContext",
								"package": "typescript"
							},
							{
								"type": "reference",
								"name": "WebGL2RenderingContext",
								"qualifiedName": "WebGL2RenderingContext",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 47,
					"name": "_testAvailable",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 274,
							"character": 10,
							"url": "https://github.com/plepers/nanogl-pf/blob/12d6a6f/src/index.ts#L274"
						}
					],
					"signatures": [
						{
							"id": 48,
							"name": "_testAvailable",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Test if texture allocation with given pixel format is possible or throws gl error.\n\nUsed by "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "isAvailable",
										"target": 34
									},
									{
										"kind": "text",
										"text": "\n\n**Important :** Using this method can change bound texture."
									}
								]
							},
							"parameters": [
								{
									"id": 49,
									"name": "format",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The pixel format ("
											},
											{
												"kind": "code",
												"text": "`GL_RGB`"
											},
											{
												"kind": "text",
												"text": ", "
											},
											{
												"kind": "code",
												"text": "`GL_RGBA`"
											},
											{
												"kind": "text",
												"text": ", etc.) to test"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 50,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The pixel data type ("
											},
											{
												"kind": "code",
												"text": "`GL_UNSIGNED_BYTE`"
											},
											{
												"kind": "text",
												"text": ", "
											},
											{
												"kind": "code",
												"text": "`GL_FLOAT`"
											},
											{
												"kind": "text",
												"text": ", etc.) to test"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 51,
									"name": "internal",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The pixel internal format to test, defaults to the "
											},
											{
												"kind": "code",
												"text": "`format`"
											},
											{
												"kind": "text",
												"text": " parameter value"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 52,
					"name": "_testRenderable",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 300,
							"character": 10,
							"url": "https://github.com/plepers/nanogl-pf/blob/12d6a6f/src/index.ts#L300"
						}
					],
					"signatures": [
						{
							"id": 53,
							"name": "_testRenderable",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Test if given format is color renderable or not.\n\nUsed by "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "isRenderable",
										"target": 39
									},
									{
										"kind": "text",
										"text": "\n\n**Important :** Using this method can change bound framebuffer and texture."
									}
								]
							},
							"parameters": [
								{
									"id": 54,
									"name": "format",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The pixel format ("
											},
											{
												"kind": "code",
												"text": "`GL_RGB`"
											},
											{
												"kind": "text",
												"text": ", "
											},
											{
												"kind": "code",
												"text": "`GL_RGBA`"
											},
											{
												"kind": "text",
												"text": ", etc.) to test"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 55,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The pixel data type ("
											},
											{
												"kind": "code",
												"text": "`GL_UNSIGNED_BYTE`"
											},
											{
												"kind": "text",
												"text": ", "
											},
											{
												"kind": "code",
												"text": "`GL_FLOAT`"
											},
											{
												"kind": "text",
												"text": ", etc.) to test"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 56,
									"name": "internal",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The pixel internal format to test, defaults to the "
											},
											{
												"kind": "code",
												"text": "`format`"
											},
											{
												"kind": "text",
												"text": " parameter value"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 30,
					"name": "dispose",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 163,
							"character": 2,
							"url": "https://github.com/plepers/nanogl-pf/blob/12d6a6f/src/index.ts#L163"
						}
					],
					"signatures": [
						{
							"id": 31,
							"name": "dispose",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Release this instance and its reference in the webgl context.\nAlso release all extensions."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 44,
					"name": "getRenderableFormat",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 250,
							"character": 2,
							"url": "https://github.com/plepers/nanogl-pf/blob/12d6a6f/src/index.ts#L250"
						}
					],
					"signatures": [
						{
							"id": 45,
							"name": "getRenderableFormat",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get the first color-renderable format from given list or null if there is none.\n\n**Important :** Using this method can change bound framebuffer and texture."
									}
								]
							},
							"parameters": [
								{
									"id": 46,
									"name": "configs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The list of formats to test"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1,
											"name": "FormatDesc"
										}
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 1,
										"name": "FormatDesc"
									}
								]
							}
						}
					]
				},
				{
					"id": 32,
					"name": "hasDepthTexture",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 184,
							"character": 2,
							"url": "https://github.com/plepers/nanogl-pf/blob/12d6a6f/src/index.ts#L184"
						}
					],
					"signatures": [
						{
							"id": 33,
							"name": "hasDepthTexture",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Know whether a texture with depth pixel format can be created or not."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 34,
					"name": "isAvailable",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 201,
							"character": 2,
							"url": "https://github.com/plepers/nanogl-pf/blob/12d6a6f/src/index.ts#L201"
						}
					],
					"signatures": [
						{
							"id": 35,
							"name": "isAvailable",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Know whether texture allocation with given pixel format is possible or throws gl error.\n\n**Important :** Using this method can change bound texture."
									}
								]
							},
							"parameters": [
								{
									"id": 36,
									"name": "format",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The pixel format ("
											},
											{
												"kind": "code",
												"text": "`GL_RGB`"
											},
											{
												"kind": "text",
												"text": ", "
											},
											{
												"kind": "code",
												"text": "`GL_RGBA`"
											},
											{
												"kind": "text",
												"text": ", etc.) to test"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 37,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The pixel data type ("
											},
											{
												"kind": "code",
												"text": "`GL_UNSIGNED_BYTE`"
											},
											{
												"kind": "text",
												"text": ", "
											},
											{
												"kind": "code",
												"text": "`GL_FLOAT`"
											},
											{
												"kind": "text",
												"text": ", etc.) to test"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 38,
									"name": "internal",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The pixel internal format to test, defaults to the "
											},
											{
												"kind": "code",
												"text": "`format`"
											},
											{
												"kind": "text",
												"text": " parameter value"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "format"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 39,
					"name": "isRenderable",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 227,
							"character": 2,
							"url": "https://github.com/plepers/nanogl-pf/blob/12d6a6f/src/index.ts#L227"
						}
					],
					"signatures": [
						{
							"id": 40,
							"name": "isRenderable",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Know whether given format is color renderable or not.\n\nThe result will be positive if an FBO to which we attach a texture that is using the given format has status "
									},
									{
										"kind": "code",
										"text": "`GL_FRAMEBUFFER_COMPLETE`"
									},
									{
										"kind": "text",
										"text": ".\n\n**Important :** Using this method can change bound framebuffer and texture."
									}
								]
							},
							"parameters": [
								{
									"id": 41,
									"name": "format",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The pixel format ("
											},
											{
												"kind": "code",
												"text": "`GL_RGB`"
											},
											{
												"kind": "text",
												"text": ", "
											},
											{
												"kind": "code",
												"text": "`GL_RGBA`"
											},
											{
												"kind": "text",
												"text": ", etc.) to test"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 42,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The pixel data type ("
											},
											{
												"kind": "code",
												"text": "`GL_UNSIGNED_BYTE`"
											},
											{
												"kind": "text",
												"text": ", "
											},
											{
												"kind": "code",
												"text": "`GL_FLOAT`"
											},
											{
												"kind": "text",
												"text": ", etc.) to test"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 43,
									"name": "internal",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The pixel internal format to test, defaults to the "
											},
											{
												"kind": "code",
												"text": "`format`"
											},
											{
												"kind": "text",
												"text": " parameter value"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "format"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 7,
					"name": "getInstance",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 146,
							"character": 9,
							"url": "https://github.com/plepers/nanogl-pf/blob/12d6a6f/src/index.ts#L146"
						}
					],
					"signatures": [
						{
							"id": 8,
							"name": "getInstance",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Create a PixelFormats instance or return the existing one for given webgl context."
									}
								]
							},
							"parameters": [
								{
									"id": 9,
									"name": "gl",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The webgl context"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "WebGLRenderingContext",
												"qualifiedName": "WebGLRenderingContext",
												"package": "typescript"
											},
											{
												"type": "reference",
												"name": "WebGL2RenderingContext",
												"qualifiedName": "WebGL2RenderingContext",
												"package": "typescript"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 6,
								"name": "default"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						10
					]
				},
				{
					"title": "Properties",
					"children": [
						29,
						18,
						19,
						14,
						17,
						15,
						16,
						27,
						25,
						23,
						28,
						26,
						24,
						20,
						21,
						22,
						13
					]
				},
				{
					"title": "Methods",
					"children": [
						47,
						52,
						30,
						44,
						32,
						34,
						39,
						7
					]
				}
			],
			"sources": [
				{
					"fileName": "index.ts",
					"line": 19,
					"character": 21,
					"url": "https://github.com/plepers/nanogl-pf/blob/12d6a6f/src/index.ts#L19"
				}
			]
		},
		{
			"id": 1,
			"name": "FormatDesc",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The description of a pixel format."
					}
				]
			},
			"sources": [
				{
					"fileName": "index.ts",
					"line": 2,
					"character": 12,
					"url": "https://github.com/plepers/nanogl-pf/blob/12d6a6f/src/index.ts#L2"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 2,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 3,
							"name": "format",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The pixel format ("
									},
									{
										"kind": "code",
										"text": "`GL_RGB`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`GL_RGBA`"
									},
									{
										"kind": "text",
										"text": ", etc.)"
									}
								]
							},
							"sources": [
								{
									"fileName": "index.ts",
									"line": 4,
									"character": 2,
									"url": "https://github.com/plepers/nanogl-pf/blob/12d6a6f/src/index.ts#L4"
								}
							],
							"type": {
								"type": "reference",
								"name": "GLenum",
								"qualifiedName": "GLenum",
								"package": "typescript"
							}
						},
						{
							"id": 4,
							"name": "internal",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The pixel internal format"
									}
								]
							},
							"sources": [
								{
									"fileName": "index.ts",
									"line": 6,
									"character": 2,
									"url": "https://github.com/plepers/nanogl-pf/blob/12d6a6f/src/index.ts#L6"
								}
							],
							"type": {
								"type": "reference",
								"name": "GLenum",
								"qualifiedName": "GLenum",
								"package": "typescript"
							}
						},
						{
							"id": 5,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The pixel data type ("
									},
									{
										"kind": "code",
										"text": "`GL_UNSIGNED_BYTE`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`GL_FLOAT`"
									},
									{
										"kind": "text",
										"text": ", etc.)"
									}
								]
							},
							"sources": [
								{
									"fileName": "index.ts",
									"line": 8,
									"character": 2,
									"url": "https://github.com/plepers/nanogl-pf/blob/12d6a6f/src/index.ts#L8"
								}
							],
							"type": {
								"type": "reference",
								"name": "GLenum",
								"qualifiedName": "GLenum",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3,
								4,
								5
							]
						}
					],
					"sources": [
						{
							"fileName": "index.ts",
							"line": 2,
							"character": 25,
							"url": "https://github.com/plepers/nanogl-pf/blob/12d6a6f/src/index.ts#L2"
						}
					]
				}
			}
		}
	],
	"groups": [
		{
			"title": "Classes",
			"children": [
				6
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				1
			]
		}
	],
	"sources": [
		{
			"fileName": "index.ts",
			"line": 2,
			"character": 0,
			"url": "https://github.com/plepers/nanogl-pf/blob/12d6a6f/src/index.ts#L2"
		}
	]
}